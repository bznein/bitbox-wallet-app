name: Playwright Single Test

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build-simulator:
    runs-on: ubuntu-latest
    container: shiftcrypto/firmware_v2:49 # TODO: this can be derived programmatically later
    steps:
      - name: Checkout reusePort branch of bitbox02-firmware
        uses: actions/checkout@v4
        with:
          repository: bznein/bitbox02-firmware
          path: bitbox02-firmware-reuse
          ref: reusePort
          fetch-depth: 0
          fetch-tags: true
          submodules: recursive

      - name: Fetch all tags
        run: |
          cd bitbox02-firmware-reuse
          git remote add upstream https://github.com/BitBoxSwiss/bitbox02-firmware.git || true
          git fetch upstream --tags

      - name: Build simulator
        run: |
          cd bitbox02-firmware-reuse
          make -j$(($(nproc)+1)) simulator

      - name: Package simulator
        run: |
          SIM_BIN=$(find bitbox02-firmware-reuse/ -path "*/build*/bin/*simulator*" -type f | head -n1)
          DEST=/tmp/bitbox02-multi-v9.24.0-simulator1.0.0-linux-amd64
          if [ -z "$SIM_BIN" ]; then
            echo "Simulator binary not found"
            exit 1
          fi
          cp "$SIM_BIN" "$DEST"
          chmod +x "$DEST"

      - name: Upload simulator
        uses: actions/upload-artifact@v4
        with:
          name: simulator-binary
          path: /tmp/bitbox02-multi-v9.24.0-simulator1.0.0-linux-amd64
  run-tests:
    runs-on: ubuntu-latest
    needs: build-simulator
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Download simulator
        uses: actions/download-artifact@v4
        with:
          name: simulator-binary
          path: /tmp

      - name: Make simulator executable
        run:  chmod +x /tmp/bitbox02-multi-v9.24.0-simulator1.0.0-linux-amd64

      - name: Install dependencies
        run: |
          cd frontends/web
          npm ci

      - name: Install Playwright browsers
        run: |
          cd frontends/web
          npx playwright install --with-deps

      - name: Start frontend
        run: |
          make webdev &
          for i in {1..30}; do
            nc -z localhost 8080 && break
            echo "Waiting for frontend..."
            sleep 1
          done
          curl -v http://localhost:8080 || true

      - name: Run single Playwright test
        env:
          FAKE_MEMORY_FILEPATH: /tmp/fakememory
        run: |
          cd frontends/web
          SIM_BIN=/tmp/bitbox02-multi-v9.24.0-simulator1.0.0-linux-amd64
          echo "Simulator available at $SIM_BIN"
          DEBUG=pw:api,pw:browser npx playwright test tests/software_keystore_watch_only.spec.ts -g "toggle watch-only and disconnect test wallet" --timeout=120000

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: frontends/web/test-results/*
